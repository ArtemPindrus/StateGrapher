<UserControl
    x:Class="StateGrapher.Views.NodeDetailsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StateGrapher"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:StateGrapher.Models"
    xmlns:system="clr-namespace:System;assembly=netstandard"
    xmlns:ut="clr-namespace:StateGrapher.Utilities"
    xmlns:viewmodels="clr-namespace:StateGrapher.ViewModels"
    xmlns:views="clr-namespace:StateGrapher.Views"
    d:DataContext="{d:DesignInstance Type=viewmodels:NodeDetailsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="200"
    mc:Ignorable="d">
    <UserControl.Resources>
        <!--  StateMachineViewModel  -->
        <DataTemplate DataType="{x:Type viewmodels:StateMachineViewModel}">
            <StackPanel Orientation="Vertical">
                <TextBlock Foreground="White" Text="{Binding Name}" />
            </StackPanel>
        </DataTemplate>

        <!--  ConnectionViewModel  -->
        <DataTemplate DataType="{x:Type viewmodels:ConnectionViewModel}">
            <StackPanel Orientation="Vertical">
                <TextBlock Foreground="White">
                    <Run Text="{Binding Connection.From.Container.Name}" />
                    <Run Text="-&gt;" />
                    <Run Text="{Binding Connection.To.Container.Name}" />
                </TextBlock>

                <CheckBox Content="Is both ways?" IsChecked="{Binding IsBothWays}" />
                <CheckBox Content="Display conditions?" IsChecked="{Binding DisplayConditions}" />

                <StackPanel>
                    <TextBlock Foreground="White" Text="Forward event:" />
                    <TextBox Text="{Binding ForwardEvent, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <StackPanel Visibility="{Binding IsBothWays, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Foreground="White" Text="Back event:" />
                    <TextBox Text="{Binding BackEvent, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <!--  Forward Conditions  -->
                <TextBlock Text="Forward Conditions" />

                <ListBox
                    MinHeight="100"
                    MaxHeight="300"
                    ItemsSource="{Binding ForwardConditions}"
                    SelectedValue="{Binding SelectedForwardCondition}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="models:ConnectionCondition">
                            <CheckBox Content="{Binding SmBoolean.Name}" IsChecked="{Binding ShouldBeTrue}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                Command="{Binding DeleteForwardConditionCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedForwardCondition}"
                                Header="Delete" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>

                <!--  Backwards Conditions  -->
                <TextBlock Text="Backwards Conditions" />

                <ListBox
                    MinHeight="100"
                    MaxHeight="300"
                    ItemsSource="{Binding BackwardsConditions}"
                    SelectedValue="{Binding SelectedBackwardsCondition}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="models:ConnectionCondition">
                            <CheckBox Content="{Binding SmBoolean.Name}" IsChecked="{Binding ShouldBeTrue}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem
                                Command="{Binding DeleteBackwardsConditionCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.DataContext.SelectedBackwardsCondition}"
                                Header="Delete" />
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>

                <!--  Add Conditions  -->

                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding Path=(local:App.StateMachineBooleans)}" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=views:NodeDetailsView}, Path=DataContext.SelectedBoolean, Mode=OneWayToSource}" />
                    <Button
                        Command="{Binding AddForwardConditionCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=views:NodeDetailsView}, Path=DataContext.SelectedBoolean}"
                        Content="Add forward condition" />

                    <Button
                        Command="{Binding AddBackwardsConditionCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=views:NodeDetailsView}, Path=DataContext.SelectedBoolean}"
                        Content="Add back condition" />
                </StackPanel>



                <!--<TextBlock Text="Conditions" />
                <ListBox ItemsSource="{Binding Conditions}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="models:Condition">
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>-->

                <!--<StackPanel>
                    <ComboBox ItemsSource="{Binding}" />
                    <Button Content="Add condition" />
                </StackPanel>-->

                <ComboBox
                    ItemsSource="{Binding Source={StaticResource ConnectionDirectionDataSource}}"
                    SelectedValue="{Binding Direction, Mode=TwoWay}"
                    Text="Direction" />
                <ComboBox
                    ItemsSource="{Binding Source={StaticResource OrientationDataSource}}"
                    SelectedValue="{Binding SourceOrientation, Mode=TwoWay}"
                    Text="Source Orientation" />
                <ComboBox
                    ItemsSource="{Binding Source={StaticResource OrientationDataSource}}"
                    SelectedValue="{Binding TargetOrientation, Mode=TwoWay}"
                    Text="Source Orientation" />
            </StackPanel>
        </DataTemplate>

        <!--  ExitNodeViewModel  -->
        <DataTemplate DataType="{x:Type viewmodels:ExitNodeViewModel}">
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Border BorderBrush="#1e90ff" BorderThickness="0,0,1,0" />
        <ContentControl VerticalAlignment="Top" Content="{Binding Path=(ut:History.LastSelectedObject)}" />
    </Grid>
</UserControl>
